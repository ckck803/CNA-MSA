server:
  port: 8080

management:
  health:
    status:
      order: DOWN, MAINTENANCE, UNKOWN, UP
      http-mapping:
        DOWN: 503
        MAINTENANCE: 503
        UNKNOWN: 200
        UP: 200
  endpoints:
      web:
          exposure:
              include: "*"
spring:
  mvc:
    hiddenmethod:
      filter:
        enabled: true
---
spring:
  profiles: default
  datasource:
    driver-class-name: org.hsqldb.jdbc.JDBCDriver 
    url: jdbc:hsqldb:mem:testdb;DB_CLOSE_DELAY=-1
    username: sa
    password: 
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: movie
          destination: theater
          contentType: application/json
        event-out:
          destination: theater
          contentType: application/json

# logging:
#   level:
#     org.hibernate.type: info
#     org.springframework.cloud: info
server:
  port: 8083
---

spring:
  profiles: docker
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka.kafka.svc.cluster.local:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: movie
          destination: theater
          contentType: application/json
        event-out:
          destination: theater
          contentType: application/json
